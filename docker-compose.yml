version: '3.7'

services:
  host-proxy:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - './docker/local-proxy/host_proxy.conf:/etc/nginx/conf.d/default.conf'

  docker-proxy:
    image: nginx
    depends_on:
      - buyer
      - sso-profile
      - exred
      - soo
      - international
    ports:
      - '80:80'
    volumes:
      - './docker/local-proxy/docker_proxy.conf:/etc/nginx/conf.d/default.conf'

  db:
    image: postgres:9.5
    ports:
      - '5432:5432'
    volumes:
      - './tmp/volumes/db:/var/lib/postgresql/data'

  redis:
    image: redis:3.2.11
    ports:
      - '6379:6379'
    volumes:
      - './docker/redis/redis.conf:/etc/redis.conf'
      - './tmp/volumes/redis:/data'
    command: redis-server /etc/redis.conf

  es:
    image: elasticsearch:5.6.8
    ports:
      - '9200:9200'
    environment:
      # Set memory
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Disable security
      xpack.security.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      # Run in development mode to ignore bootstrap checks
      transport.host: "localhost"
    volumes:
      - './tmp/volumes/es:/usr/share/elasticsearch/data'

  api:
    image: local-workspace/directory-api
    build:
      context: ../directory-api/
      dockerfile: new_Dockerfile
    ports:
      - '8000:8000'
    env_file:
      - ../directory-api/.new_env
    depends_on:
      - db
      - redis
      - es
    # command: /bin/bash -x -c 'while true; do sleep 60; done'

  buyer:
    image: local-workspace/directory-ui-buyer
    build:
      context: ../directory-ui-buyer/
      dockerfile: new_Dockerfile
    ports:
      - '8001:8001'
    env_file:
      - ../directory-ui-buyer/.new_env
    depends_on:
      - sso-proxy
      - redis

  exopps:
    image: local-workspace/export-opportunities
    build:
      context: ../export-opportunities/
      dockerfile: new_Dockerfile
    ports:
      - '8002:8002'
    depends_on:
      - db
      - redis
      - es

  sso:
    image: local-workspace/directory-sso
    build:
      context: ../directory-sso/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-sso/.new_env
    ports:
      - '8003:8003'
    depends_on:
      - db
      - redis

  sso-proxy:
    image: local-workspace/directory-sso-proxy
    build:
      context: ../directory-sso-proxy/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-sso-proxy/.new_env
    ports:
      - '8004:8004'
    depends_on:
      - sso

  supplier:
    image: local-workspace/directory-ui-supplier
    build:
      context: ../directory-ui-supplier/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-ui-supplier/.new_env
    ports:
      - '8005:8005'
    depends_on:
      - sso-proxy

  sso-profile:
    image: local-workspace/directory-sso-profile
    build:
      context: ../directory-sso-profile/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-sso-profile/.new_env
    ports:
      - '8006:8006'
    depends_on:
      - sso-proxy

  exred:
    image: local-workspace/great-domestic-ui
    build:
      context: ../great-domestic-ui/
      dockerfile: new_Dockerfile
    env_file:
      - ../great-domestic-ui/.new_env
    ports:
      - '8007:8007'
    depends_on:
      - db
      - redis
      - api
      - sso-proxy
      - cms
      - forms-api

  soo:
    image: local-workspace/navigator
    build:
      context: ../navigator/
      dockerfile: new_Dockerfile
    env_file:
      - ../navigator/.new_env
    ports:
      - '8008:8008'
    depends_on:
      - db
      # - sso-proxy

  cms:
    image: local-workspace/directory-cms
    build:
      context: ../directory-cms/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-cms/.new_env
    ports:
      - '8010:8010'
    depends_on:
      - db
      - redis

  forms-api:
    image: local-workspace/directory-forms-api
    build:
      context: ../directory-forms-api/
      dockerfile: new_Dockerfile
    env_file:
      - ../directory-forms-api/.new_env
    ports:
      - '8011:8011'
    depends_on:
      - db
      - redis

  invest:
    image: local-workspace/invest-ui
    build:
      context: ../invest-ui/
      dockerfile: new_Dockerfile
    env_file:
      - ../invest-ui/.new_env
    ports:
      - '8012:8012'
    depends_on:
      - db
      - redis

  international:
    image: local-workspace/great-international-ui
    build:
      context: ../great-international-ui/
      dockerfile: new_Dockerfile
    env_file:
      - ../great-international-ui/.new_env
    ports:
      - '8013:8013'
    depends_on:
      - db
      - redis
      - sso
      - cms
      - forms-api
